version: "3.4"

services:
  api:
    ports:
      - 127.0.0.1:${API_PORT}:${API_PORT}
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
      # - jaeger
    volumes:
      - ./backend/saleor/:/app/saleor:Z
      - ./backend/templates/:/app/templates:Z
      - ./backend/tests/:/app/tests
      # shared volume between worker and api for media
      - saleor-media:/app/media
    command: python manage.py runserver 0.0.0.0:${API_PORT}
    env_file:
      # - common.env
      # - backend.env
      - .env
    # environment:
      # - JAEGER_AGENT_HOST=jaeger
      # - STOREFRONT_URL=http://localhost:3000/
      # - DASHBOARD_URL=http://localhost:9000/
      # - ALLOWED_HOSTS=localhost,api

  storefront:
    extends:
      file: ./frontend/docker-compose.yml
      service: storefront
    networks:
      - saleor-backend-tier
    depends_on:
      - api
      # - saleor-app-checkout

  # saleor-app-checkout:
  #   extends:
  #     file: ./react-storefront/docker-compose.yml
  #     service: saleor-app-checkout
  #   networks:
  #     - saleor-backend-tier
  #   depends_on:
  #     - api

  dashboard:
    build:
      context: ./dashboard
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - "127.0.0.1:${DASHBOARD_PORT}:${DASHBOARD_PORT}"
    restart: unless-stopped


  db:
    image: library/postgres:13-alpine
    env_file:
      - .env
    ports:
      - 127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql
    # environment:
    #   - POSTGRES_DB=saleor
    #   - POSTGRES_USER=saleor
    #   - POSTGRES_PASSWORD=saleor

  redis:
    image: library/redis:5.0-alpine
    env_file:
      - .env
    ports:
      - 127.0.0.1:${REDIS_PORT}:${REDIS_PORT}
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data

  worker:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info -B
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    env_file:
      # - common.env
      # - backend.env
      - .env
    depends_on:
      - redis
      # - mailhog
    volumes:
      - ./backend/saleor/:/app/saleor:Z,cached
      - ./backend/templates/:/app/templates:Z,cached
      # shared volume between worker and api for media
      - saleor-media:/app/media

  # jaeger:
  #   image: jaegertracing/all-in-one
  #   ports:
  #     - "5775:5775/udp"
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "16686:16686"
  #     - "14268:14268"
  #     - "9411:9411"
  #   restart: unless-stopped
  #   networks:
  #     - saleor-backend-tier

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui. Visit http://localhost:8025/ to check emails
  #   restart: unless-stopped
  #   networks:
  #     - saleor-backend-tier

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media:

networks:
  saleor-backend-tier:
    driver: bridge
